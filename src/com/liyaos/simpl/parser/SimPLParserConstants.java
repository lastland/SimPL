/* Generated By:JJTree&JavaCC: Do not edit this line. SimPLParserConstants.java */
package com.liyaos.simpl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimPLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LET = 6;
  /** RegularExpression Id. */
  int IN = 7;
  /** RegularExpression Id. */
  int END = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int THEN = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int DO = 13;
  /** RegularExpression Id. */
  int FST = 14;
  /** RegularExpression Id. */
  int SND = 15;
  /** RegularExpression Id. */
  int HEAD = 16;
  /** RegularExpression Id. */
  int TAIL = 17;
  /** RegularExpression Id. */
  int FUN = 18;
  /** RegularExpression Id. */
  int NIL = 19;
  /** RegularExpression Id. */
  int CONS = 20;
  /** RegularExpression Id. */
  int OPAR = 21;
  /** RegularExpression Id. */
  int CPAR = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int ASSIGN = 24;
  /** RegularExpression Id. */
  int SEMICOLON = 25;
  /** RegularExpression Id. */
  int DEFUN = 26;
  /** RegularExpression Id. */
  int INT = 27;
  /** RegularExpression Id. */
  int BOOL = 28;
  /** RegularExpression Id. */
  int PLUS = 29;
  /** RegularExpression Id. */
  int MINUS = 30;
  /** RegularExpression Id. */
  int TIMES = 31;
  /** RegularExpression Id. */
  int DIVIDE = 32;
  /** RegularExpression Id. */
  int EQ = 33;
  /** RegularExpression Id. */
  int GREATERTHAN = 34;
  /** RegularExpression Id. */
  int LESSTHAN = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int UMINUS = 38;
  /** RegularExpression Id. */
  int NOT = 39;
  /** RegularExpression Id. */
  int IDENTIFIER = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"let\"",
    "\"in\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"fst\"",
    "\"snd\"",
    "\"head\"",
    "\"tail\"",
    "\"fun\"",
    "\"nil\"",
    "\"::\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":=\"",
    "\";\"",
    "\"->\"",
    "<INT>",
    "<BOOL>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"and\"",
    "\"or\"",
    "\"~\"",
    "\"not\"",
    "<IDENTIFIER>",
  };

}
